# -*- coding: utf-8 -*-
"""Task_3_2_Heart_Disease_Diagnostic_boot.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tjNFdzCMmXdOAklEhqOkNM4g6sq0xxUM
"""
import warnings
warnings.filterwarnings("ignore")
# cd drive/MyDrive/Data/Task3_predict_data/

# !ls
def Run_Disease_heart_bot():
    import pickle
    # load the model from disk
    filename = './Tache3_make_prediction/B_heart_disease_prediction/Ensembling_Model_For_disease_checker.sav'
    scv = pickle.load(open(filename, 'rb'))
    # print(scv)
    
    def get_info_nominal(text , subject):
      print(text)
      variable_intered=""
      while True:
        try:
          variable_possible=["no","yes"]
          variable_intered=input("")
          variable_intered=variable_intered.lower()
          if (variable_intered in variable_possible ):
            break
          else:
            print("plese enter  No  or  Yes ")
        except:
            print("Can you please Enter a valid ",subject)
    
      valeur=1
      if (variable_intered =="no"):
        valeur=0
    
      return valeur
    
    def get_info_Continuous(text , subject):
      print(text)
      while True:
        try:
          variable_intered=float(input(""))
          break
        except:
            print("Can you please Enter a valid ",subject)
      
      return variable_intered
    
    def Heart_disease_Bot():  
    
      flage =True
      while flage:
        print("hello please anter the folowing mesearmunt in order to predict your statu \n")
        print("enter Yes to contunious the prisougre and No to close \n ")
        continu_pres=""
        while True:
          continu_pres=input("desicion :  ")
          continu_pres=continu_pres.lower()
          if (continu_pres=="no" or continu_pres=="yes"):
            break
          else:
            print("Please inter a valide answer \n ")
    
        if (continu_pres=="no"):
          break
    
        # age: age of the patient 
        user_Age=get_info_Continuous("please enter your age  \n" ,"Age")
        # sex: male(0) or female(1);(Nominal)
        user_sex=get_info_nominal("is you gender a female  Yes/NO   \n" ,"gender")
        # cigsPerDay: the number of cigarettes that the person smoked on average in one day
        user_cigsPerDay=get_info_Continuous("please enter number of cigarettes thatyou smoke on average in one day \n","cigarettes")
        # BPMeds: whether or not the patient was on blood pressure medication (Nominal)
        user_bpmeds=get_info_nominal("Tell me my friend are you in Blood pressure medication No/Yes \n","Blood pressure")
        # prevalentHyp: whether or not the patient was hypertensive (Nominal)
        user_prevalentHyp=get_info_nominal("were you hypertensive No/Yes \n"," hypertensive")
        # diabetes: whether or not the patient had diabetes (Nominal)
        user_diabetes=get_info_nominal("do you have diabetes  No/Yes  \n"," diabetes")
    
        # totChol: total cholesterol level (Continuous)
        user_totChol=get_info_Continuous("please telle me the total cholesterol level in your body \n","cholesterol level")
        # sysBP: systolic blood pressure (Continuous)
        user_sysBP=get_info_Continuous("What about the systolic blood pressure in your body \n","systolic blood pressure")
        # diaBP: diastolic blood pressure (Continuous)
        user_diaBP=get_info_Continuous("please telle me the diastolic blood pressure in your body \n","diastolic blood pressure")
        # glucose: glucose level (Continuous)
        user_glucose=get_info_Continuous("Oky last question :please telle me the glucose level in your body \n","glucose level")
    
        #sysBP	glucose	age	cigsPerDay	totChol	diaBP	prevalentHyp	male	BPMeds	diabetes 
        #test_user=[[ user_sysBP , user_glucose , Age_user , user_cigsPerDay , user_totChol , user_diaBP , user_prevalentHyp , user_sex , user_bpmeds , user_diabetes ]]
        flage = False
        test_user_valid=[[user_sysBP , user_glucose , user_Age , user_cigsPerDay , user_totChol , user_diaBP , user_prevalentHyp , user_sex , user_bpmeds , user_diabetes ]]
        Hd_prediction=scv.predict(test_user_valid)
        if Hd_prediction==1:
          print("the probability that you will have heart disease is 98%")
        else: 
          print("with ur current info , you wont have a heart disease but try to sty healthy")
    
    def Run_Disease_heart_bot_run():
      while True:
        Heart_disease_Bot()
        print("\n would you like to do the diagnostic again enter  Yes / No  \n")
        answ=""
        while True:
          answ=input("")
          answ=answ.lower()
          if (answ=="yes" or answ=="no"):
            break
          else:
            print("Please enter a valide answer")
        if answ=="no":
          break
      
    Run_Disease_heart_bot_run()
